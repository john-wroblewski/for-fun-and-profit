Problem: Determine if a directed graph has a universal sink.

Solution:  // below are two different algorithms, depending on the representation of the graph.
	         // both run in O(|V|).

if the input is of type adjacency_list
	1. traverse the list looking for a node with an empty edge list, ie adj[i].list == NULL
	2. if no such node exists, return false
	3. if one does exist, say node w, check that each other node has an edge going into w
	4. if each other node does have an edge going into w, return true (and possibly the node, w)
	5. if there is another node, not w, with no edge going into w, return false


if the input is of type adjacency_matrix
	1. let i = 0
	2. let j = 0
	3. loop:
	4. if i has an edge into j
	5.	if i == j
	6.		j++
	7.	i = j
	8.	if j < |V| - 1
	9.		goto loop
	10. else if j < |V| - 1
	12.		j++
	13.		goto loop
	14. if i is a universal sink
	15.	  return "true", i
	16. return "false", NULL
